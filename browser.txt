Browser tests
=============

These are browser-driven tests for the functionality provided by the
``collective.dancing`` package.

Setup
-----

  >>> from Testing.ZopeTestCase import user_password
  >>> from Products.Five.testbrowser import Browser
  >>> browser = Browser()
  >>> browser.handleErrors = False
  >>> from collective.dancing.tests import setup_error_log
  >>> print_error = setup_error_log(self.portal)

Control panel
-------------

The ``collective.dancing`` package registers a control panel; we can
reach it as an administrator through the 'Site Setup' link:

  >>> browser.addHeader('Authorization',
  ...                   'Basic %s:%s' % ('portal_owner', user_password))
  >>> browser.open(self.portal.absolute_url())
  >>> browser.getLink('Site Setup').click()
  >>> browser.getLink('Newsletters').click()
  >>> browser.url
  'http://nohost/plone/newsletter-controlpanel.html'
  >>> "Newsletter configuration" in browser.contents
  True

Stats
-----

A simple statistics screen can be reached by visiting the 'Newsletter
statistics' link:

  >>> browser.getLink('Newsletter statistics').click()
  >>> "No statistics available at this time" in browser.contents
  True

We want to see some statistics, don't we?  Let's add some fake stats:

  >>> from collective.dancing import stats
  >>> import datetime
  >>> first = stats.Stat(datetime.datetime.now(), "Book snippets", 42)
  >>> second = stats.Stat(datetime.datetime.now(), "News items", 30)
  >>> stats.get_queued_stats().append(first)
  >>> stats.get_queued_stats().append(second)

And reload that statistics page:

  >>> browser.reload()
  >>> str(first.timestamp) in browser.contents
  True
  >>> str(second.timestamp) in browser.contents
  True

We can also clear all stats:

  >>> browser.getControl('Clear statistics').click()
  >>> "Statistics cleared" in browser.contents
  True
  >>> str(first.timestamp) in browser.contents
  False

Administration
--------------

The admistration screen can be reached through the same control panel:

  >>> browser.open('http://nohost/plone/newsletter-controlpanel.html')
  >>> browser.getLink('Newsletter administration').click()

Through this administration screen we can add and delete channels:

  >>> browser.getControl('Title').value = 'My channel'
  >>> browser.getControl('Add').click()
  >>> 'Item added successfully' in browser.contents
  True
  >>> 'My channel' in browser.contents
  True 
  >>> browser.getControl('Title').value = 'My other channel'
  >>> browser.getControl('Add').click()
  >>> 'Item added successfully' in browser.contents
  True

Let's delete the first of the two channels:

  >>> btn = browser.getControl(name='crud-edit.my-channel.widgets.select:list')
  >>> btn.value = ['selected']
  >>> browser.getControl(name='crud-edit.buttons.delete').click()
  >>> "Successfully deleted items" in browser.contents
  True
  >>> 'My channel' in browser.contents, 'My other channel' in browser.contents
  (False, True)

We can click on the channel's name to get to the channel management
screen:

  >>> browser.getLink('My other channel').click()

  
